[{"C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\index.js":"1","C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\App.js":"2","C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\components\\Body.js":"3","C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\components\\CustomAppBar.js":"4","C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\firebase.config.js":"5"},{"size":151,"mtime":1611463666640,"results":"6","hashOfConfig":"7"},{"size":734,"mtime":1611463666632,"results":"8","hashOfConfig":"7"},{"size":4954,"mtime":1612601618492,"results":"9","hashOfConfig":"7"},{"size":720,"mtime":1611463666637,"results":"10","hashOfConfig":"7"},{"size":655,"mtime":1612590720939,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"14j6sjd",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\index.js",[],["24","25"],"C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\App.js",[],"C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\components\\Body.js",["26","27"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport firebaseApp from \"../firebase.config\";\r\n\r\nconst Body = () => {\r\n  const [allPlants, setAllPlants] = useState([]);\r\n  const [imgMap, setImgMap] = useState(new Map());\r\n  const db = firebaseApp.firestore();\r\n  const storage = firebaseApp.storage();\r\n  const [open, setOpen] = useState(false);\r\n  const [selected, setSelected] = useState({\r\n    id: \"\",\r\n    medicinalUse: \"\",\r\n    localName: \"\",\r\n    contributor: \"\",\r\n    approved: \"\",\r\n    file: \"\",\r\n    contributorUID: \"\",\r\n  });\r\n\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const openInNewTab = (url) => {\r\n    const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\r\n    if (newWindow) newWindow.opener = null;\r\n  };\r\n\r\n  const fetchAll = async () => {\r\n    setAllPlants([]);\r\n    await db\r\n      .collection(\"plants\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const data = querySnapshot.docs.map((doc) => doc);\r\n        data.forEach((item) => {\r\n          const {\r\n            medicinalUse,\r\n            localName,\r\n            contributor,\r\n            approved,\r\n            file,\r\n            contributorUID,\r\n          } = item.data();\r\n\r\n          const plant = {\r\n            id: item.id,\r\n            medicinalUse,\r\n            localName,\r\n            contributor,\r\n            approved,\r\n            file,\r\n            contributorUID,\r\n          };\r\n          setAllPlants((oldList) => [...oldList, plant]);\r\n        });\r\n      });\r\n  };\r\n\r\n  const getUrls = () => {\r\n    const storageRef = storage.ref();\r\n\r\n    allPlants.forEach((plant) => {\r\n      storageRef\r\n        .child(\"images/\" + plant.file)\r\n        .getDownloadURL()\r\n        .then((url) => updateMap(plant.file, url));\r\n    });\r\n  };\r\n\r\n  const updateMap = (k, v) => {\r\n    setImgMap(new Map(imgMap.set(k, v)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n    getUrls();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableCell>Scientific Name</TableCell>\r\n            <TableCell>Image</TableCell>\r\n            <TableCell>Local Name</TableCell>\r\n            <TableCell>Medicinal Use</TableCell>\r\n            <TableCell>Contributor</TableCell>\r\n            <TableCell>Approved</TableCell>\r\n          </TableHead>\r\n          <TableBody>\r\n            {allPlants.map((plant) => {\r\n              return (\r\n                <TableRow key={plant.id}>\r\n                  <TableCell>{plant.id}</TableCell>\r\n                  <TableCell\r\n                    onClick={() => {\r\n                      openInNewTab(imgMap.get(plant.file));\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{ maxWidth: \"50px\", maxHeight: \"50px\" }}\r\n                      src={imgMap.get(plant.file)}\r\n                      alt={plant.id}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{plant.localName}</TableCell>\r\n                  <TableCell>{plant.medicinalUse}</TableCell>\r\n                  <TableCell>{plant.contributor}</TableCell>\r\n                  <TableCell>\r\n                    {plant.approved ? (\r\n                      \"Approved\"\r\n                    ) : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setSelected(plant);\r\n\r\n                          handleToggle();\r\n                        }}\r\n                      >\r\n                        Approve\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Dialog open={open} onClose={handleToggle}>\r\n        <DialogTitle>\r\n          Approve the contribution by <b>{selected.contributor}</b>?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Scientific Name: {selected.id} <br />\r\n            Local Name: {selected.localName} <br />\r\n            Medicinal Use: {selected.medicinalUse}\r\n            <br />\r\n            Image: <br />\r\n            <img\r\n              src={imgMap.get(selected.file)}\r\n              style={{ maxWidth: \"500px\", maxHeight: \"500px\" }}\r\n            />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleToggle}>Cancel</Button>\r\n          <Button onClick={handleToggle} color=\"primary\" autoFocus>\r\n            Approve\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\components\\CustomAppBar.js",[],"C:\\Users\\jpaob\\OneDrive\\Desktop\\Admin\\PlantScannerAdmin\\src\\firebase.config.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":93,"column":6,"nodeType":"34","endLine":93,"endColumn":8,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":160,"column":13,"nodeType":"38","endLine":163,"endColumn":15},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchAll' and 'getUrls'. Either include them or remove the dependency array.","ArrayExpression",["41"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [fetchAll, getUrls]",{"range":"44","text":"45"},[2143,2145],"[fetchAll, getUrls]"]